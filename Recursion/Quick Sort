#include <iostream>

using namespace std;
int partition(int arr[],int s,int e)
{
    int pivot=arr[s];
    int count=0;
    for(int i=s+1;i<=e;i++)
    {
        if(arr[i]<=pivot)
        {
            count++;
        }
    }
    //right position of the pivot
    int pivotrightindex=s+count;
    swap(arr[pivotrightindex],arr[s]);


    //left and right vala part smbhal lete ha
    int i=s,j=e;
    while(i<pivotrightindex && j>pivotrightindex)
    {
        while(arr[i]<=pivot)
        {
            i++;
        }
        while(arr[j]>pivot)
        {
            j--;
        }
        if(i<pivotrightindex && j>pivotrightindex)
        {
            swap(arr[i++],arr[j--]);
        }
    }
    return pivotrightindex;

}
void quicksort(int arr[],int s,int e)
{
    //base case
    if(s>=e)
    {
        return;
    }
    //partition
    int p=partition(arr,s,e);
    //left part sort
    quicksort(arr,s,p-1);

    //right part sort
    quicksort(arr,p+1,e);
}
int main()
{
    int arr[5]={2,4,1,6,9};
    int n=5;
    quicksort(arr,0,n-1);
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;

    return 0;
}
